global _pilatusBasename
global _pilatusIsOn
global _pilatusServerAddress
_pilatusBasename = "image_"
_pilatusIsOn = 0
global _pilatusROIx1, _pilatusROIy1, _pilatusROIx2, _pilatusROIy2

def pilatus_roi '{
    global _pilatusROIx1, _pilatusROIy1, _pilatusROIx2, _pilatusROIy2
    if ($# != 4) {
        printf("Usage: $0 [<upper-left x1> <upper-left y1> <lower-right x2> <lower-right y2>]\n")
        return
    }
    if ($1 < 0) {
        _pilatusROIx1 = 0
    }
    else {
        if ($1 > 487) {
            _pilatusROIx1 = 487
        }
        else {
            _pilatusROIx1 = $1
        }
    }
    if ($2 < 0) {
        _pilatusROIy1 = 0
    }
    else {
        if ($2 > 619) {
            _pilatusROIy1 = 619
        }
        else {
            _pilatusROIy1 = $2
        }
    }
    if ($3 < 0) {
        _pilatusROIx2 = 0
    }
    else {
        if ($3 > 487) {
            _pilatusROIx2 = 487
        }
        else {
            _pilatusROIx2 = $3
        }
    }
    if ($4 < 0) {
        _pilatusROIy2 = 0
    }
    else {
        if ($4 > 619) {
            _pilatusROIy2 = 619
        }
        else {
            _pilatusROIy2 = $4
        }
    }
    printf("Region of interest: (%d, %d) (%d, %d)\n",\\
           _pilatusROIx1, _pilatusROIy1, _pilatusROIx2, _pilatusROIy2)
}'

def pilatuson '{
    global _pilatusIsOn
    global _pilatusServerAddress
    local connected
    if ($# != 1) {
        eprint "Usage: pilatuson server_ip_address"
        exit
    }
    _pilatusServerAddress = "$1"
    printf("Pilatus turning on...")
    if (_pilatusIsOn != 0) {
        printf("was and still is enabled.\n")
    } else {
        connected = sock_par(sprintf("%s:41234", _pilatusServerAddress), "connect")
        if (connected == 1) {
            sock_put(sprintf("%s:41234", _pilatusServerAddress), "Nimages 1\n")
            sock_put(sprintf("%s:41234", _pilatusServerAddress), "SetThreshold 20000\n")
            cdef("user_precount", "_pilatus_user_precount();", "pilatus_user_precount_key", 0x20)
            cdef("user_postcount", "_pilatus_move_files_postcount();", "pilatus_user_postcount_key", 0x20)
            cdef("user_scan_tail", "_pilatus_move_files_postscan();", "pilatus_move_files_postscan_key", 0x20)
            _pilatusIsOn = 1
            unix(sprintf("ssh det@%s \'mkdir -p /home/det/spec_images\'", _pilatusServerAddress))
            sock_put(sprintf("%s:41234", _pilatusServerAddress), "ImgPath /home/det/spec_images\n")
            sock_put(sprintf("%s:41234", _pilatusServerAddress), "LdFlatField off\n")
        }
        else {
            printf("couldn\'t connect to the server %s:41234, check the ip address", _pilatusServerAddress)
        }
    }
}'

def _pilatus_user_precount() '{
    global COUNT_TIME
    global _pilatusIsOn
    global _isCt
    local filename
    local data_dir
    if (!_pilatusIsOn) {
        return
    }
    filename = _pilatus_datafilename(_isCt)
    data_dir = _dir_absolute_datapath("pilatus", _isCt, !_isCt)
    # display the file-name if this count is initiated by ct
    if (_isCt > 0) {
        printf("Pilatus file name: %s%s\n", data_dir, filename)
    }
    sock_put(sprintf("%s:41234", _pilatusServerAddress), sprintf("Exptime %f\n", COUNT_TIME))
    sock_put(sprintf("%s:41234", _pilatusServerAddress), sprintf("Exposure %s\n", filename))
}'

def _pilatus_move_files_postcount() '{
    local data_dir
    # distinguish between absolute paths and those relative to the 
    # home directory
    data_dir = _dir_absolute_datapath("pilatus", _isCt, !_isCt)
    sleep(2)
    if (_isCt) {
        unix(sprintf("scp det@%s:~/spec_images/* %s > /dev/null", _pilatusServerAddress, data_dir))
        unix(sprintf("ssh det@%s \'rm -rf /home/det/spec_images/*\'", _pilatusServerAddress))
    }
}'

def _pilatus_move_files_postscan() '{
    local data_dir
    global _pilatusROIx1, _pilatusROIy1, _pilatusROIx2, _pilatusROIy2
    # distinguish between absolute paths and those relative to the 
    # home directory
    data_dir = _dir_absolute_datapath("pilatus", _isCt, !_isCt)
    unix(sprintf("scp det@%s:~/spec_images/* %s > /dev/null", _pilatusServerAddress, data_dir))
    unix(sprintf("ssh det@%s \'rm -rf /home/det/spec_images/*\'", _pilatusServerAddress))
    unix(sprintf("pilatus2hdf5.py --remove %s --roi %d %d %d %d",\\
                data_dir,\\
                _pilatusROIx1, _pilatusROIy1, _pilatusROIx2, _pilatusROIy2))
    p sprintf("created %s.hdf5", substr(data_dir, 0, length(data_dir) - 1))
}'

def pilatusoff '
    if (_pilatusIsOn != 1) {
        return
    }
    _pilatusIsOn = 0
    cdef("user_precount", "", "pilatus_user_precount_key", "delete")
    cdef("user_postcount", "", "pilatus_user_postcount_key", "delete")
    cdef("user_postcount", "", "pilatus_move_files_postscan_key", "delete")
    sock_par(sprintf("%s:41234", _pilatusServerAddress), "close")
'

def _pilatus_datafilename(_isCt) '{
    global _isCt
    global _pilatusBasename
    global COUNT_TIME, SCAN_N, NPTS, NPTS_SUB
    local dname
    if (_isCt) {
        # if this count is initianted by ct then a running number is used
        dname = sprintf("%s", _dir_ct_name(_pilatusBasename))
    } else {
        # compile data-file name using the current scan, point and exposure 
        # number together with the data-directory and base file name
        dname = sprintf("%s%05d_%05d_%02d", _pilatusBasename, SCAN_N, NPTS, NPTS_SUB)
    }

    return (dname)
}'
